name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "!cmd/**"
      - "!configs/**"
      - "!db/**"
      - "!internal/**"
      - "!pkg/**"
      - "!app/**"
      - "!infrastructure/**"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20
          cache: true

      - name: Install Dependencies
        run: make setup

      - name: Build
        run: make build

      - name: Test
        run: make tests

      - name: Coverage
        run: bash <(curl -s https://codecov.io/bash)

      - name: go test with coverage
        run: go tool cover -func coverage

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          token: ${{ secrets.CODECOV_TOKEN }}
          # path: logs/coverage.txt
          files: logs/coverage.txt
          flags: unittests

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Log in to the registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ github.repository }}:latest
          labels: ${{ steps.meta.outputs.labels }}
