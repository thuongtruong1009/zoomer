worker_processes  1;

events {
    worker_connections  1024;
}

http {
    upstream redis_cluster {
        server redis-master:6379;
        server redis-replica:6379 backup;
    }

    server {
        listen 80;
        server_name redis.example.com;

        location / {
            proxy_pass http://redis_cluster;
        }
    }
}


In this configuration file, we define an upstream block that specifies the Redis master and replica servers. We use the backup option to mark the replica server as a backup in case the master fails. We then define a server block that listens on port 80 and proxies requests to the Redis cluster using the proxy_pass option.

When you run docker-compose up, Docker Compose will start the Redis and Nginx containers and connect them together. The Sentinel container will automatically monitor the Redis master and replica containers and perform automatic failover if necessary. The Nginx container will distribute traffic to the Redis instances using the reverse proxy configuration.
