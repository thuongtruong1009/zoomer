port 26379
sentinel monitor mymaster redis-master 6379 2
sentinel down-after-milliseconds mymaster 5000
sentinel failover-timeout mymaster 15000
sentinel parallel-syncs mymaster 1
sentinel auth-pass mymaster REDIS_PASSWORD
sentinel notification-script mymaster /usr/local/bin/redis-failover.sh

# sentinel monitor mymaster redis-master 6379 2: This line sets up monitoring for the Redis master instance. mymaster is the name of the sentinel group, redis-master is the hostname of the Redis master instance, 6379 is the Redis port, and 2 is the number of Sentinels that need to agree on a failover for it to happen.

# sentinel down-after-milliseconds mymaster 5000: This line sets the time after which the Sentinel will consider the Redis master instance as down. In this example, it's set to 5 seconds.

# sentinel failover-timeout mymaster 15000: This line sets the maximum time the Sentinel will wait before triggering a failover. In this example, it's set to 15 seconds.

# sentinel parallel-syncs mymaster 1: This line sets the maximum number of replicas that can sync with the new master at the same time. In this example, it's set to 1.

# sentinel auth-pass mymaster REDIS_PASSWORD: This line sets the Redis password for authentication.

# sentinel notification-script mymaster /usr/local/bin/redis-failover.sh: This line sets the path to the script that will be executed in case of a failover. You can replace /usr/local/bin/redis-failover.sh with the path to your own script.

# Make sure to replace REDIS_PASSWORD with your actual Redis password.

# This configuration file tells Sentinel to monitor the Redis master instance and trigger a failover if it's down. It also sets various parameters for the failover process, such as the maximum time to wait and the number of replicas that can sync with the new master at the same time. Finally, it specifies the script to execute in case of a failover.
