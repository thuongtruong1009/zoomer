user nginx;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    log_format main '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $bytes_sent '
        '"$http_referer" $http_user_agent $request_body $gzip_ratio '
        '"$request_time $upstream_connect_time $upstream_header_time $upstream_response_time ';

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log main;

    upstream backend {
      server app:8080;
    }

    server {
        listen 80;
        server_name localhost;
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log;

        # listen [::]:443 ssl;
        # listen 443 ssl;
        # ssl_certificate /path/to/your/key.pem;
        # ssl_certificate_key /path/to/your/cert.pem;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }
}
