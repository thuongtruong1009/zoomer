version: "3.9"

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    hostname: postgres
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./.docker/postgres/data:/var/lib/postgresql/data
    networks:
      - postgres-network
    # healthcheck:
    #   test: pg_isready
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  pgadmin:
    image: dockette/adminer:pgsql
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    # expose:
    #   - "80"
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    networks:
      - postgres-network
    volumes:
      - ./.docker/postgres/pgadmin:/var/lib/pgadmin

  redis-master:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./.docker/redis/data/master:/data
    command: redis-server --requirepass master_password
    restart: always

  redis-slave:
    image: redis:7.0-alpine
    links:
      - redis-master
    volumes:
      - ./.docker/redis/data/slave:/data
    command: redis-server --slaveof redis-master 6379 --masterauth master_password --requirepass slave_password
    restart: always

  redis-sentinel:
    build:
      context: ./.docker/redis/config
    links:
      - redis-master
    restart: always

  redis-sentinel2:
    extends:
      service: redis-sentinel

  redis-sentinel3:
    extends:
      service: redis-sentinel

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - minio-network
    volumes:
      - ./.docker/minio:/var/lib/minio
      - ./.docker/minio/data:/data
      - ./.docker/minio/config:/root/.minio
    command: server --console-address ":9001" /var/lib/minio
    restart: always

  rabbitmq:
    image: rabbitmq:3.11.3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 15s
      retries: 5
    volumes:
      - ./.docker/rabbitmq/data:/var/lib/rabbitmq
      - ./.docker/rabbitmq/log:/var/log/rabbitmq
    restart: always
    networks:
      - rabbitmq-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - ${APP_PORT}:${APP_PORT}
    environment:
      - APP_PORT=80
    depends_on:
      - postgres
      - redis-master
      - minio
      - rabbitmq
    volumes:
      - .:/app
    links:
      - redis-sentinel
    networks:
      - postgres-network
      - minio-network
      - rabbitmq-network
      - nginx-network
    restart: always

  nginx:
    image: nginx:1.24-alpine
    container_name: nginx
    ports:
      - 80:80
    volumes:
      # - ./:/usr/share/nginx/html
      # - ./:/var/www
      - ./.docker/nginx:/var/log/nginx
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - nginx-network
    restart: always

networks:
  postgres-network:
    driver: bridge
  minio-network:
    driver: bridge
  rabbitmq-network:
    driver: bridge
  nginx-network:
    driver: bridge
