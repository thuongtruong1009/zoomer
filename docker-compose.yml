version: "3.9"

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    hostname: postgres
    ports:
      - "${PG_PORT}:5432"
    restart: always
    volumes:
      - ./.docker/postgres/data:/var/lib/postgresql/data
    networks:
      - postgres-network
    healthcheck:
      test: pg_isready
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dockette/adminer:pgsql
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - postgres-network
    volumes:
      - ./.docker/postgres/pgadmin:/var/lib/pgadmin

  redis-master:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    networks:
      - redis-network
    volumes:
      - ./.docker/redis/data/master:/data
    restart: always

  redis-slave:
    image: redis:7.0-alpine
    networks:
      - redis-network
    volumes:
      - ./.docker/redis/data/slave:/data
    restart: always

  redis-sentinel:
    image: redis:7.0-alpine
    ports:
      - "26379:26379"
    networks:
      - redis-network
    volumes:
      - ./.docker/redis/config/sentinel.conf:/usr/local/etc/redis/sentinel.conf
    restart: always

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    ports:
      - "6378:8081"

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "${MINIO_PORT}:9000"
      - "9001:9001"
    networks:
      - minio-network
    volumes:
      # - ./.docker/minio:/var/lib/minio
      - ./.docker/minio/data:/data
      - ./.docker/minio/config:/root/.minio
    command: server --console-address ":9001" /var/lib/minio
    restart: always

  rabbitmq:
    image: rabbitmq:3.11.3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 15s
      retries: 5
    volumes:
      - ./.docker/rabbitmq/data:/var/lib/rabbitmq
      - ./.docker/rabbitmq/log:/var/log/rabbitmq
    restart: always
    networks:
      - rabbitmq-network

  app:
    # image: thuongtruong1009/zoomer
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "${APP_PORT}:8080"
    # deploy:
    #   replicas: 3
    depends_on:
      - postgres
      - redis-master
      - minio
      - rabbitmq
    volumes:
      - .:/app
    networks:
      - postgres-network
      - minio-network
      - rabbitmq-network
      - redis-network
    restart: always

networks:
  postgres-network:
    driver: bridge
  minio-network:
    driver: bridge
  rabbitmq-network:
    driver: bridge
  redis-network:
    driver: bridge
