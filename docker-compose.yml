version: "3.7"

services:
  postgres:
    image: postgres:12.2
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      # POSTGRES_USER: postgres
      # POSTGRES_PASSWORD: 123456789
      # POSTGRES_DB: zoomer

      - POSTGRES_DB=${POSTGRES_DB:-zoomer}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-123456789}
    volumes:
      - ./.docker/postgres:/var/lib/postgresql/data
    restart: unless-stopped

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    networks:
      - minio-network
    volumes:
      - ./storage:/data
    command: server /data
    restart: unless-stopped

  app:
    image: zoomer
    container_name: zoomer
    # platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
      # dockerfile: ../build/Dockerfile.dev.air
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - minio
    volumes:
      - .:/app
      - $GOPATH/pkg/mod:/go/pkg/mod
    command: sh docker-entrypoint.dev.sh
    # working_dir: /app/cmd
    # command: reflex -r '(\.go$$|go\.mod)' -s go run .
    restart: on-failure

  nginx:
    image: nginx:1.21.6-alpine
    ports:
      - "80:80"
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf/default.conf
    depends_on:
      - app
    networks:
      - nginx-network

networks:
  nginx-network:
    driver: bridge
  minio-network:
    driver: bridge
